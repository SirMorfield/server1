version: '3'

services:
  nodejs:
    container_name: nodejs
    restart: unless-stopped
    build:
      context: ./nodejs
      target: frontend
    environment:
      - PORT=8080

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  plex:
    container_name: plex
    restart: unless-stopped
    image: ghcr.io/linuxserver/plex
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM=claim-Le_ex28z3gJAske8w7nZ
    ports:
      - 32400:32400
      - 1900:1900/udp
      - 3005:3005
      - 5354:5353/udp # should be the same port, but on ubunutu ahavi-daemon uses the 5353 port already
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    volumes:
      - ./runtimeGenerated/plex/config:/config
      - ${HOME}/files/series:/mnt/series
      - ${HOME}/files/films:/mnt/films
      - ${HOME}/files/torrents/downloaded:/mnt/torrents

  qbittorrent:
    container_name: qbittorrent
    restart: unless-stopped
    image: ghcr.io/linuxserver/qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
      - WEBUI_PORT=8081
    volumes:
      - ./runtimeGenerated/qbittorrent/config:/config
      - ${HOME}/files/torrents/:/mnt/files

  samba:
    image: crazymax/samba
    restart: unless-stopped
    volumes:
      - ./samba/config.yml:/data/config.yml
      - ./samba/password_joppe:/data/password_joppe:ro
      - /home/joppe:/samba/share
    ports:
      - 445:445
    environment:
      - TZ=Europe/Amsterdam
      - SAMBA_LOG_LEVEL=0

  bookclub-backend:
    container_name: bookclub-backend
    restart: unless-stopped
    build:
      context: ./bookclub-voting/backend
      target: production
    volumes:
      - backend_node_module:/app/node_modules
    env_file:
      - ./bookclub-voting/.env
    environment:
      - PORT=3000
      - POSTGRES_HOST=bookclub-postgres
    depends_on:
      - bookclub-postgres

  bookclub-frontend:
    container_name: bookclub-frontend
    restart: unless-stopped
    build:
      context: ./bookclub-voting/frontend
      target: production
    volumes:
      - frontend_node_module:/app/node_modules
    env_file:
      - ./bookclub-voting/.env
    environment:
      - PORT=8080
      - BACKEND_URL=http://bookclub-backend:3000

  bookclub-postgres:
    container_name: bookclub-postgres
    image: postgres:13
    restart: unless-stopped
    env_file:
      - ./bookclub-voting/.env
    volumes:
      - pgdata:/var/lib/postgresql/data

  syncthing:
    container_name: syncthing
    restart: unless-stopped
    image: syncthing/syncthing
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./runtimeGenerated/syncthing/var/syncthing:/var/syncthing
      - /home/joppe/files/sync:/sync
      - /home/joppe/git:/git
      - /home/joppe/git_deleted:/git_deleted
    ports:
      - 22000:22000/tcp # TCP file transfers
      - 22000:22000/udp # QUIC file transfers
      - 21027:21027/udp # Receive local discovery broadcasts

  factorio:
    container_name: factorio
    image: goofball222/factorio:experimental
    restart: unless-stopped
    ports:
      - 27015:27015
      - 34197:34197/udp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./runtimeGenerated/factorio:/factorio
    environment:
      - TZ=Europe/Amsterdam

  filebrowser:
    container_name: filebrowser
    volumes:
      - /home/joppe:/srv
      - ./runtimeGenerated/filebrowser/database.db:/database.db
      - ./runtimeGenerated/filebrowser/.filebrowser.json:/.filebrowser.json
    ports:
      - 8080:80
    image: filebrowser/filebrowser

  minecraft:
    container_name: minecraft
    restart: unless-stopped
    image: itzg/minecraft-server
    ports:
      - 25565:25565
    environment:
      EULA: "TRUE"
      VERSION: "1.19.3"
      MEMORY: 2G
    tty: true
    stdin_open: true
    volumes:
      - ./runtimeGenerated/minecraft:/data


volumes:
  backend_node_module:
  frontend_node_module:
  pgdata:
