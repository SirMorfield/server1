server {
	server_name www.joppekoers.nl joppekoers.nl;
	location / {
		proxy_pass    http://nodejs:8080/;
	}
	client_max_body_size 10G;

	include /etc/nginx/fragments/ssl.conf;
}

server {
	server_name torrents.joppekoers.nl;

	location / {
		proxy_pass http://qbittorrent:8081/;

		proxy_http_version      1.1;
		proxy_set_header        X-Forwarded-Host        $http_host;
		http2_push_preload on; # Enable http2 push

		# The following directives effectively nullify Cross-site request forgery (CSRF)
		# protection mechanism in qBittorrent, only use them when you encountered connection problems.
		# You should consider disable "Enable Cross-site request forgery (CSRF) protection"
		# setting in qBittorrent instead of using these directives to tamper the headers.
		# The setting is located under "Options -> WebUI tab" in qBittorrent since v4.1.2.
		#proxy_hide_header       Referer;
		#proxy_hide_header       Origin;
		#proxy_set_header        Referer                 '';
		#proxy_set_header        Origin                  '';

		# Not needed since qBittorrent v4.1.0
		#add_header              X-Frame-Options         "SAMEORIGIN";
	}

	include /etc/nginx/fragments/ssl.conf;
}

server {
	server_name plex.joppekoers.nl;

	location / {
		proxy_pass http://plex:32400/;
	}

	include /etc/nginx/fragments/ssl.conf;
}

server {
	server_name find-peers.joppekoers.nl findpeers.joppekoers.nl;

	return 301 https://find-peers.codam.nl/;

	include /etc/nginx/fragments/ssl.conf;
}

server {
	server_name  		bookclub.joppekoers.nl;

	location / {
		proxy_pass http://frontend:8080/;
	}

	include /etc/nginx/fragments/ssl.conf;
}

server {
	server_name  		bookclubapi.joppekoers.nl;

	location / {
		proxy_pass http://backend:3000/;
	}

	include /etc/nginx/fragments/ssl.conf;
}

server {
	server_name				nextcloud.joppekoers.nl;
	client_max_body_size	0;

	location /.well-known/carddav {
		return 301 $scheme://$host/remote.php/dav;
	}

	location /.well-known/caldav {
		return 301 $scheme://$host/remote.php/dav;
	}

	location / {
		proxy_pass http://nextcloud-app:80/;

		proxy_buffering off;
		proxy_set_header X-Real-IP $remote_addr;

		# Enable HSTS (HTTP Strict Transport Security)
		add_header Strict-Transport-Security "max-age=15768000;includeSubDomains";

		proxy_set_header			Host $host;
		proxy_set_header			X-Real-IP $remote_addr;
		proxy_set_header			X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header			X-Forwarded-Proto $scheme;
		add_header Front-End-Https	on;
    	proxy_pass_header			Authorization;

		proxy_headers_hash_max_size 512;
		proxy_headers_hash_bucket_size 64;

		proxy_redirect off;
		proxy_max_temp_file_size 0;
	}

	include /etc/nginx/fragments/ssl.conf;
}

server {
	server_name  		syncthing.joppekoers.nl;

	location / {
		proxy_pass http://syncthing:8384/;
	}

	include /etc/nginx/fragments/ssl.conf;
}


server {
	server_name freekbal.nl *.freekbal.nl;
	return 301 https://frekbal.nl$request_uri;
}

server {
	# Drop any request that does not match any of the other server names
	listen 443 ssl default_server;
	listen [::]:443 ssl http2 default_server;
	ssl_reject_handshake on;
}

# all http traffic will already 301 redirected to https by docker-nginx-certbot
