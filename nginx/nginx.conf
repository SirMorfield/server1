server {
	server_name www.joppekoers.nl joppekoers.nl;
	location / {
		proxy_pass    http://nodejs:8080/;
	}
	client_max_body_size 10G;

	listen 443;
	listen [::]:443;
	listen 80;
	listen [::]:80;
}

server {
	server_name torrents.joppekoers.nl;

	location / {
		proxy_pass http://qbittorrent:8081/;

		proxy_http_version      1.1;
		proxy_set_header        X-Forwarded-Host        $http_host;
		http2_push_preload on; # Enable http2 push

		# The following directives effectively nullify Cross-site request forgery (CSRF)
		# protection mechanism in qBittorrent, only use them when you encountered connection problems.
		# You should consider disable "Enable Cross-site request forgery (CSRF) protection"
		# setting in qBittorrent instead of using these directives to tamper the headers.
		# The setting is located under "Options -> WebUI tab" in qBittorrent since v4.1.2.
		#proxy_hide_header       Referer;
		#proxy_hide_header       Origin;
		#proxy_set_header        Referer                 '';
		#proxy_set_header        Origin                  '';

		# Not needed since qBittorrent v4.1.0
		#add_header              X-Frame-Options         "SAMEORIGIN";
	}

	listen 443;
	listen [::]:443;
	listen 80;
	listen [::]:80;
}

server {
	server_name plex.joppekoers.nl;

	send_timeout 100m;

	# Plex has a lot of text script which is easily compressed.
	# If these settings cause playback issues with devices, remove them. (Haven't encountered any yet)
	gzip on;
	gzip_vary on;
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
	gzip_disable "MSIE [1-6]\.";

	# nginx default client_max_body_size is 1MB, which breaks Camera Upload feature from phones.
	# Increasing the limit fixes the issue.
	# Note if you are sending VERY LARGE files (e.g. 4k videos) you will need to increase this much further.
	client_max_body_size 100M;

	# Set headers for Plex server.
	proxy_http_version 1.1;
	proxy_set_header Host localhost; # Forces Plex to see all connections from the proxy as local
	proxy_set_header Referer localhost; # Forces Plex to see all connections from the proxy as local
	proxy_set_header Origin $scheme://localhost:$server_port; # Forces Plex to see all connections from the proxy as local
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
	proxy_set_header Accept-Encoding ""; # Disables compression between Plex and Nginx

	# Disable buffering - send to the client as soon as the data is received from Plex.
	proxy_redirect off;
	proxy_buffering off;

	location / {
		proxy_pass http://plex:32400/;
	}

	listen 443;
	listen [::]:443;
	listen 80;
	listen [::]:80;
}

server {
	server_name find-peers.joppekoers.nl findpeers.joppekoers.nl;

	return 301 https://find-peers.codam.nl/;

	listen 443;
	listen [::]:443;
	listen 80;
	listen [::]:80;
}

server {
	server_name  		bookclub.joppekoers.nl;

	location / {
		proxy_pass http://bookclub-frontend:8080/;
	}

	listen 443;
	listen [::]:443;
	listen 80;
	listen [::]:80;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    listen [::]:80;            # comment to disable IPv6

    # if ($scheme = "http") {
    #     return 301 https://$host$request_uri;
    # }

    listen 443 ssl http2;
    listen [::]:443 ssl http2; # comment to disable IPv6

    # Solves slow upload speeds caused by http2
    http2_body_preread_size 1048576;

    server_name nextcloud.joppekoers.nl;
	server_name localhost; # TODO

    location / {
        # resolver localhost; # Note: you need to set a valid dns resolver here or use 127.0.0.1 / [::1] instead of localhost in the line below. See https://stackoverflow.com/a/49642310 for a better explanation
        proxy_pass http://nextcloud:11000$request_uri; # Note: you need to change localhost to 127.0.0.1 or [::1], if you don't use a valid dns resolver in the line above

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400s;
        client_max_body_size 0;

        # Websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # ssl_certificate /etc/letsencrypt/live/nextcloud/fullchain.pem;   # managed by certbot on host machine
    # ssl_certificate_key /etc/letsencrypt/live/nextcloud/privkey.pem; # managed by certbot on host machine

    # ssl_session_timeout 1d;
    # ssl_session_cache shared:MozSSL:10m; # about 40000 sessions
    # ssl_session_tickets off;

    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;
}



server {
	server_name  		syncthing.joppekoers.nl;

	location / {
		proxy_pass http://syncthing:8384/;
	}

	listen 443;
	listen [::]:443;
	listen 80;
	listen [::]:80;
}

server {
	server_name freekbal.nl *.freekbal.nl;
	return 301 https://frekbal.nl$request_uri;

	listen 443;
	listen [::]:443;
	listen 80;
	listen [::]:80;
}
